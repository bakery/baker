import { takeEvery } from 'redux-saga';
import { put, call } from 'redux-saga/effects';
import GraphQLClient from 'parse-graphql-client';
import Settings from '../settings';

// XX: you will probably move these constants into constants module
// associated with an appropriate reducer
const {{constantCase sagaName}}_REQUEST = 'sagas/{{constantCase sagaName}}_REQUEST';
const {{constantCase sagaName}}_ERROR = 'sagas/{{constantCase sagaName}}_ERROR';
const {{constantCase sagaName}}_SUCCESS = 'sagas/{{constantCase sagaName}}_SUCCESS';

const settings = Settings.load();
// eslint-disable-next-line global-require
const client = new GraphQLClient(settings.graphqlURL, require('parse/react-native'));

function runQuery() {
  // XX: replace example query with your target model
  return client.query(`
    {
      example {
        id, text
      }
    }
  `);
}

function* run{{pascalCase sagaName}}(action) {
  try {
    const response = yield call(runQuery);
    yield put({
      type: {{constantCase sagaName}}_SUCCESS,
      payload: response,
    });
  } catch (error) {
    yield put({
      type: {{constantCase sagaName}}_ERROR,
      payload: {
        error,
      },
    });
  }
}

export function* {{sagaName}}() {
  yield* takeEvery({{constantCase sagaName}}_REQUEST, run{{pascalCase sagaName}});
}
